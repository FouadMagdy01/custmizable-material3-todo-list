rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // User profile document
      match /profile/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Todo documents under each user
      match /todos/{todoId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // Validation for todo documents
        allow create: if request.auth != null 
          && request.auth.uid == userId
          && request.resource.data.keys().hasAll(['id', 'title', 'description', 'isCompleted', 'priority', 'createdAt', 'updatedAt', 'userId'])
          && request.resource.data.title is string
          && request.resource.data.title.size() >= 1 
          && request.resource.data.title.size() <= 255
          && request.resource.data.description is string
          && request.resource.data.description.size() <= 1000
          && request.resource.data.isCompleted is bool
          && request.resource.data.priority in ['low', 'medium', 'high']
          && request.resource.data.userId == userId
          && request.resource.data.createdAt is timestamp
          && request.resource.data.updatedAt is timestamp;
          
        allow update: if request.auth != null 
          && request.auth.uid == userId
          && resource.data.userId == userId
          && request.resource.data.userId == userId
          && request.resource.data.updatedAt is timestamp;
          
        allow delete: if request.auth != null 
          && request.auth.uid == userId
          && resource.data.userId == userId;
      }
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}